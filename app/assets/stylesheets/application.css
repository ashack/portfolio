/*
 * This is a manifest file that'll be compiled into application.css.
 *
 * With Propshaft, assets are served efficiently without preprocessing steps. You can still include
 * application-wide styles in this file, but keep in mind that CSS precedence will follow the standard
 * cascading order, meaning styles declared later in the document or manifest will override earlier ones,
 * depending on specificity.
 *
 * Consider organizing styles into separate files for maintainability.
 */

/* Link to Tailwind CSS from builds directory */
/*= link ../builds/tailwind.css */

/* Announcement offset CSS variables */
:root {
  --announcement-offset: 0px;
  --announcement-height: 0px;
}

/* Ensure min-h-full works properly */
.min-h-full {
  min-height: 100vh;
}

/* Smooth transitions for sticky elements when announcement height changes */
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

/* Custom sticky header class that uses the announcement offset */
.sticky-with-announcement {
  position: sticky;
  top: var(--announcement-offset, 0px);
  transition: top 0.3s ease-out;
}

/* Form validation styles */
.field-error {
  animation: shake 0.3s;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}

/* Ensure red border is visible on invalid fields */
input.border-red-500 {
  border-color: rgb(239 68 68) !important;
}

input.border-red-500:focus {
  border-color: rgb(239 68 68) !important;
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1) !important;
}

/* Password requirements list styling */
.password-requirements ul {
  font-size: 0.75rem;
}

.password-requirements li {
  transition: all 0.2s ease;
}

/* Smooth transitions for form elements */
input:focus {
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
